# Using the Database for Analysis
use MarketingAnalytics;

----------------------------------------------
#Insights
----------------------------------------------
# 1) Retrieve all purchases made on or after '2023-01-01'
 Select * from Purchases where Purchasedate>= '2023-01-01';
 
 #2)Calculate the total amount spent by each customer
 Select CustomerID,Sum(Amount) As `Total Spent`from Purchases
 group by CustomerID;

#3)Find the average purchase amount
select round(avg(amount), 2) as `Avg Purchase Amount` from Purchases;

#4)Identify the top 3 campaigns with the highest total purchases
select Campaigns.CampaignID,Campaigns.CampaignName,sum(amount) as `Total Purchase`
from purchases
join campaigns
using (CampaignID)
group by CampaignID order by `Total Purchase` desc limit 3;

#5)Identify the campaign with the bottom 3 total purchases
select Campaigns.CampaignID,Campaigns.CampaignName,sum(amount) as `Total Purchase`
from purchases
join campaigns
using (CampaignID)
group by CampaignID order by `Total Purchase` limit 3;

#6)Count the number of purchases made by customers aged 30 and above
Select count(PurchaseID) as `No. of Purchase`from purchases
join customers
on purchases.CustomerID = customers.CustomerID
where Age>30;

#7)Calculate the total revenue generated from purchases
select sum(amount) as `Total Revenue` from purchases;

#8)Find the average rating given by customers in feedback
select round(avg(Rating),2) as `Average Rating` from CustomerFeedback;

#9)Identify the customer who made the highest purchase
select customers.CustomerID,customers.Name,max(Amount) as `Highest Purchase Amount` from Purchases
join customers
using (CustomerID)
group by CustomerID order by `Highest Purchase Amount` desc; 

#10)Count the number of purchases made in each month of the year
#---------------------for Calendar Year---------------------
select Month(PurchaseDate) as `Sr. No`, date_format(PurchaseDate, '%M') as Month, count(*) as `No. Of Purchases` 
from Purchases 
group by Month,`Sr. No` ORDER BY `Sr. No`;

#---------------------for Financial Year---------------------
select 
    case 
        when month(PurchaseDate) >= 4 then month(PurchaseDate) - 3 
        else month(PurchaseDate) + 9 
    end as `Sr. No`,
    date_format(PurchaseDate, '%M') as month,
    count(*) as `No. Of Purchases`
from 
    Purchases
group by Month,`Sr. No` ORDER BY `Sr. No`;


#11)calculate the total budget spent on marketing campaigns for each channel
select Channel, sum(Budget) as `Total Spent` from campaigns group by Channel;

#12)Calculate the total revenue generated by each campaign:
select CampaignID, sum(Amount) as `Total Revenue` from Purchases group by CampaignID;

#13)Identify the campaign with the lowest total purchases:
select CampaignID, sum(Amount) as `Total Purchases` from Purchases group by CampaignID order by `Total Purchases` limit 1;

#14)Identify the campaign with the highest total purchases:
select CampaignID, sum(Amount) as `Total Purchases` from Purchases group by CampaignID order by `Total Purchases`desc limit 1;

#15)details of each campaign, including the total number of purchases made and the total revenue generated from those purchases 
select Campaigns.CampaignID, CampaignName, count(Purchases.PurchaseID) as `Total Purchases`, sum(Purchases.Amount) as `Total Revenue`
from Campaigns 
left join Purchases
on Campaigns.CampaignID = Purchases.CampaignID 
group by Campaigns.CampaignID, CampaignName;

#16)Retrieve each campaign's ID, name, average rating, and total feedback count
select Campaigns.CampaignID, CampaignName, round(avg(CustomerFeedback.Rating),2) as `Average Rating`, count(CustomerFeedback.FeedbackID) as `Total Feedbacks` 
from Campaigns left join CustomerFeedback using (CampaignID)
group by Campaigns.CampaignID, CampaignName;

#17)Retrieve each campaign's ID, name, budget, total revenue, and return on investment (ROI) as a percentage.
select campaigns.campaignid, campaignname, budget, sum(purchases.amount) as `Total Revenue`, (sum(purchases.amount) / budget) * 100 as ROI 
from campaigns 
left join purchases using (campaignid)
group by campaigns.campaignid, campaignname, budget;

#18)Analyze customer distribution and revenue by campaign channels
select  c.Channel, count(cust.CustomerID) as `Total Customers`, sum(p.Amount) as `Total Revenue`
from customers as cust
join purchases as p using (CustomerID)
join campaigns as c using (CampaignID)
group by c.Channel;

#19) Analyze customer distribution and revenue by location 
select Location,count(c.CustomerID) as ` Total Customers`,sum(p.amount) as `Total Revenue`
from customers as c
join purchases as p 
using(CustomerID)
group by location order by `Total Revenue` desc;

#20) Find Customers Who Gave Feedback but Did Not Make a Purchase
select distinct cf.CustomerID, cf.CampaignID
from customerfeedback cf
left join purchases p on cf.CustomerID = p.CustomerID and cf.CampaignID = p.CampaignID
where p.CustomerID is null;







